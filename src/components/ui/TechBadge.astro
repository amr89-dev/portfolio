---
interface Props {
  tech: string
  size?: 'sm' | 'md' | 'lg'
  class?: string
}

const { tech, size = 'md', class: className = '' } = Astro.props

const techData = {
  js: {
    name: 'JavaScript',
    icon: '/svg/js.svg',
    abbr: 'JS',
  },
  ts: {
    name: 'TypeScript',
    icon: '/svg/ts.svg',
    abbr: 'TS',
  },
  node: {
    name: 'Node.js',
    icon: '/svg/node.svg',
    abbr: 'NODE',
  },
  next: {
    name: 'Next.js',
    icon: '/svg/nextjs.svg',
    abbr: 'NEXT',
  },
  react: {
    name: 'React',
    icon: '/svg/react.svg',
    abbr: 'REACT',
  },
  tailwind: {
    name: 'Tailwind CSS',
    icon: '/svg/tailwind.svg',
    abbr: 'TW',
  },
  postgres: {
    name: 'PostgreSQL',
    icon: '/svg/postgresql.svg',
    abbr: 'PG',
  },
  git: {
    name: 'Git',
    icon: '/svg/git.svg',
    abbr: 'GIT',
  },
  github: {
    name: 'GitHub',
    icon: '/svg/github.svg',
    abbr: 'GITHUB',
  },
  astro: {
    name: 'Astro',
    icon: '/svg/astro.svg',
    abbr: 'ASTRO',
  },
}

const data = techData[tech as keyof typeof techData] || {
  name: '...',

  abbr: '...',
}
---

<div
  class={`flex flex-row items-center justify-center border-4 border-black overflow-hidden bg-sunshine px-2 py-1 gap-2`}
>
  {data.icon && <img src={data.icon} alt={data.name} class="w-4 h-4" />}
  <p class="text-xs font-bold">{data.name}</p>
</div>
