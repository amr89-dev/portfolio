---
interface Props {
  tech: string
  class?: string
}

const { tech, class: className = '' } = Astro.props

const techData = {
  js: {
    name: 'JavaScript',
    icon: './src/assets/IconSprite.svg#icon-javascript',
    abbr: 'JS',
  },
  ts: {
    name: 'TypeScript',
    icon: './src/assets/IconSprite.svg#icon-typescript',
    abbr: 'TS',
  },
  node: {
    name: 'Node.js',
    icon: '/src/assets/IconSprite.svg#icon-node',
    abbr: 'NODE',
  },
  next: {
    name: 'Next.js',
    icon: '/src/assets/IconSprite.svg#icon-nextjs',
    abbr: 'NEXT',
  },
  react: {
    name: 'React',
    icon: '/src/assets/IconSprite.svg#icon-react',
    abbr: 'REACT',
  },
  tailwind: {
    name: 'Tailwind',
    icon: '/src/assets/IconSprite.svg#icon-tailwind',
    abbr: 'TW',
  },
  postgres: {
    name: 'PostgreSQL',
    icon: '/src/assets/IconSprite.svg#icon-postgresql',
    abbr: 'PG',
  },
  git: {
    name: 'Git',
    icon: '/src/assets/IconSprite.svg#icon-git',
    abbr: 'GIT',
  },
  github: {
    name: 'GitHub',
    icon: '/src/assets/IconSprite.svg#icon-github',
    abbr: 'GITHUB',
  },
  astro: {
    name: 'Astro',
    icon: '/src/assets/IconSprite.svg#icon-astro',
    abbr: 'ASTRO',
  },
}

const data = techData[tech as keyof typeof techData] || {
  name: '...',
  icon: '',
  abbr: '...',
}
---

<div
  class={`flex flex-row items-center justify-center border-4 border-black overflow-hidden bg-sunshine px-2 py-1 gap-2 `}
>
  {
    data.icon && (
      <svg class="w-4 h-4 flex items-center justify-center ">
        <use href={data.icon} />
      </svg>
    )
  }
  <p class="text-xs font-bold">{data.name}</p>
</div>
